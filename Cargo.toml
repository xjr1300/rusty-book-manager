[package]
name = "rusty-book-manager"
version = "0.1.0"
edition.workspace = true
license.workspace = true
publish.workspace = true

[[bin]]
name = "app"
path = "src/bin/app.rs"

[workspace]
members = [
  "adapter",
  "api",
  "kernel",
  "registry",
  "rstest-example",
  "shared",
  "sqlx-test-example",
]

[workspace.package]
edition = "2021"
publish = false
license = "MIT"

[workspace.dependencies]
adapter = { path = "./adapter" }
anyhow = "1.0.75"
api = { path = "./api" }
async-trait = "0.1.74"
axum = { version = "0.7.5", features = ["macros"] }
axum-extra = { version = "0.9.3", features = ["typed-header"] }
bcrypt = "0.15.0"
chrono = { version = "0.4.26", default-features = false, features = ["serde"] }
derive-new = "0.6.0"
garde = { version = "0.18.0", features = ["derive", "email"] }
itertools = "0.11.0"
kernel = { path = "./kernel" }
mockall = "0.11.4"
opentelemetry = "0.21.0"
opentelemetry-jaeger = { version = "0.20.0", features = ["rt-tokio"] }
opentelemetry_sdk = { version = "0.21.2", features = ["rt-tokio"] }
redis = { version = "0.25.3", features = ["tokio-rustls-comp"] }
registry = { path = "./registry" }
secrecy = "0.8.0"
serde = { version = "1.0.174", features = ["derive"] }
shared = { path = "./shared" }
sqlx = { version = "0.7.3", default-features = false, features = [
  "runtime-tokio",
  "uuid",
  "chrono",
  "macros",
  "postgres",
  "migrate",
] }
strum = { version = "0.26.2", features = ["derive"] }
thiserror = "1.0.44"
tokio = { version = "1.37.0", features = ["full"] }
tokio-stream = "0.1.14"
tower = { version = "0.4.13", features = ["util"] }
tower-http = { version = "0.5.0", features = ["cors", "trace"] }
tracing = { version = "0.1.37", features = ["log"] }
tracing-opentelemetry = "0.22.0"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
utoipa = { version = "4.1.0", features = ["axum_extras", "uuid", "chrono"] }
utoipa-redoc = { version = "2.0.0", features = ["axum"] }
uuid = { version = "1.4.0", features = ["v4", "serde"] }

[dependencies]
adapter.workspace = true
anyhow.workspace = true
api.workspace = true
async-trait.workspace = true
axum.workspace = true
axum-extra.workspace = true
bcrypt.workspace = true
chrono.workspace = true
derive-new.workspace = true
garde.workspace = true
itertools.workspace = true
kernel.workspace = true
mockall.workspace = true
opentelemetry.workspace = true
opentelemetry-jaeger.workspace = true
opentelemetry_sdk.workspace = true
registry.workspace = true
secrecy.workspace = true
serde.workspace = true
shared.workspace = true
sqlx.workspace = true
strum.workspace = true
thiserror.workspace = true
tokio.workspace = true
tower.workspace = true
tower-http.workspace = true
tracing.workspace = true
tracing-opentelemetry.workspace = true
tracing-subscriber.workspace = true
utoipa.workspace = true
utoipa-redoc.workspace = true
uuid.workspace = true

[dev-dependencies]
futures = "0.3.31" # examples
reqwest = "0.12.9" # examples
rstest = "0.18.2"  # tests
time = "0.3.36"

[profile.dev.package.sqlx-macros]
opt-level = 3

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
